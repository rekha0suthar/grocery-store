name: Manual Deploy Backend to Vercel

on:
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no backend changes'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    name: Manual Deploy to Vercel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for backend/core changes
        id: changes
        if: ${{ !inputs.force_deploy }}
        run: |
          # Check if there are changes in backend or core packages in the last commit
          COMMIT_SHA=${{ github.sha }}
          PREV_COMMIT=$(git rev-parse $COMMIT_SHA^)
          
          echo "Checking changes between $PREV_COMMIT and $COMMIT_SHA"
          
          # Check if there are changes in backend or core packages
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $COMMIT_SHA)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          if echo "$CHANGED_FILES" | grep -E '^(backend/|packages/core/)'; then
            echo "backend_changed=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Backend or core changes detected"
          else
            echo "backend_changed=false" >> $GITHUB_OUTPUT
            echo "‚ùå No backend or core changes detected"
          fi

      - name: Deploy to Vercel
        if: ${{ inputs.force_deploy || steps.changes.outputs.backend_changed == 'true' }}
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

      - name: Skip deployment
        if: ${{ !inputs.force_deploy && steps.changes.outputs.backend_changed == 'false' }}
        run: |
          echo "üö´ Skipping deployment - no backend or core changes detected"
          echo "Use 'force_deploy: true' to deploy anyway"
